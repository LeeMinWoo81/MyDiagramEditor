<UserControl
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:MyDiagramEditor.Converters"        
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="MyDiagramEditor.Views.EditorView"
        xmlns:cal="http://www.caliburnproject.org"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
        Background="#CBD4E4" MinWidth="627" MinHeight="200"
        >
    <UserControl.Resources>
        <converters:GridLengthConverter x:Key="gridLengthConverter" />
        <converters:ConvertisseurBordure x:Key="ConvertisseurBordure" />
        <converters:ConvertisseurCouleurFond x:Key="ConvertisseurCouleurFond" />
        <converters:ConvertisseurModeEdition x:Key="ConvertisseurModeEdition" />
    </UserControl.Resources>
    <!-- L'ensemble de l'edtieur -->
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Create"
                          cal:Message.Attach="[Event Click] = [Action LoadCanvasCreation()]"/>
                <MenuItem Header="_Load"
                          cal:Message.Attach="[Event Click] = [Action Load()]"/>
                <MenuItem Header="_Save"
                          cal:Message.Attach="[Event Click] = [Action Save()]"/>
                <MenuItem Header="_Export"
                          Click="Export"/>
            </MenuItem>
        </Menu>
        <!-- La barre a outil -->
        <ScrollViewer DockPanel.Dock="Left"
            VerticalScrollBarVisibility="Auto">
            <StackPanel Orientation="Vertical">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.01">
                        <GradientStop Color="Gray"/>
                        <GradientStop Color="#FFFFFFFF"/>
                        <GradientStop Color="#FFE0E0E0" Offset="1"/>
                    </LinearGradientBrush>
                </StackPanel.Background>

                <Border>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">

                        <TextBlock HorizontalAlignment="Center" FontSize="12" FontWeight="Bold">Manipulation</TextBlock>

                        <StackPanel Orientation="Vertical" Margin="3 10 3 3">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">

                                <Button x:Name="Push" Width="20" Height="20"  Background="#00000000"  Content="≚" FontSize="17" ToolTip="Push"/>
                                <Button x:Name="Pop" Width="20" Height="20" Background="#00000000"  Content="≙" FontSize="17" ToolTip="Pop"/>
                                <Button x:Name="Clean" Width="20" Height="20"  Background="#00000000"   FontSize="17" ToolTip="Clear">
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="Trashcan" Height="15" Width="15"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button x:Name="lasso" Width="40" Height="40" ToolTip="Lasso"
                            BorderBrush="{Binding SelectedTool, ConverterParameter=lasso, Converter={StaticResource ConvertisseurBordure}, UpdateSourceTrigger=PropertyChanged}" 
                            Background="{Binding SelectedTool, ConverterParameter=lasso, Converter={StaticResource ConvertisseurCouleurFond}, UpdateSourceTrigger=PropertyChanged}" 
                            cal:Message.Attach="[Event Click] = [Action SelectTool('lasso')]">
                                    <StackPanel>
                                        <Image Source="/Resources/lasso.png"  />
                                    </StackPanel>
                                </Button>
                                <Button Width="40" Height="40" ToolTip="Move"
                        BorderBrush="{Binding SelectedTool, ConverterParameter=deplacement, Converter={StaticResource ConvertisseurBordure}, UpdateSourceTrigger=PropertyChanged}" 
                        Background="{Binding SelectedTool, ConverterParameter=deplacement, Converter={StaticResource ConvertisseurCouleurFond}, UpdateSourceTrigger=PropertyChanged}" 
                        cal:Message.Attach="[Event Click] = [Action SelectTool('deplacement')]">
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="CursorMove" Height="25" Width="25"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                            
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Width="40" Height="40" ToolTip="Floating Text"
                        BorderBrush="{Binding SelectedTool, ConverterParameter=texte, Converter={StaticResource ConvertisseurBordure}, UpdateSourceTrigger=PropertyChanged}" 
                        Background="{Binding SelectedTool, ConverterParameter=texte, Converter={StaticResource ConvertisseurCouleurFond}, UpdateSourceTrigger=PropertyChanged}" 
                        cal:Message.Attach="[Event Click] = [Action SelectTool('texte')]">
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="FormatText" Height="25" Width="25"/>
                                    </StackPanel>
                                </Button>
                                <Button Width="40" Height="40" ToolTip="Resize"
                            HorizontalContentAlignment="Left"                            
                            BorderBrush="{Binding SelectedTool, ConverterParameter=resize, Converter={StaticResource ConvertisseurBordure}, UpdateSourceTrigger=PropertyChanged}" 
                            Background="{Binding SelectedTool, ConverterParameter=resize, Converter={StaticResource ConvertisseurCouleurFond}, UpdateSourceTrigger=PropertyChanged}"                              
                            cal:Message.Attach="[Event Click] = [Action SelectTool('resize')]">
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="Resize" Height="25" Width="25"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="ClearSelection" Width="40" Height="40" ToolTip="Clear Selection"
                            HorizontalContentAlignment="Left"
                            Background="Transparent"                                
                            >
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="SelectionOff" Height="25" Width="25" Margin="4"/>
                                    </StackPanel>
                                </Button>
                                <Button Width="40" Height="40" ToolTip="Insert Image"
                        Background="Transparent"   
                        cal:Message.Attach="[Event Click] = [Action InsertImage()]"
                        >
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="ImagePlus" Height="25" Width="25"/>
                                    </StackPanel>
                                </Button>

                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="RotateRight" Width="40" Height="40" ToolTip="Rotate Right (90°)"
                            HorizontalContentAlignment="Left"
                            Background="Transparent"                                
                            >
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="RotateRightVariant" Height="30" Width="30" Margin="2"/>
                                    </StackPanel>
                                </Button>
                                <Button x:Name="RotateLeft" Width="40" Height="40"  ToolTip="Rotate Left (90°)"
                            HorizontalContentAlignment="Left" 
                            Background="Transparent"                                
                            FontSize="14">
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="RotateLeftVariant" Height="30" Width="30" Margin="2"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="Duplicate" Width="40" Height="40" ToolTip="Duplicate/Paste"
                            HorizontalContentAlignment="Left"
                            Background="Transparent"                                
                            >
                                    <StackPanel>
                                        <Image Source="/Resources/dupliquer.png" Width="30" Height="30" />
                                    </StackPanel>
                                </Button>
                                <Button x:Name="Cut" Width="40" Height="40" Margin="0"  ToolTip="Cut"
                            HorizontalContentAlignment="Left"
                            Background="Transparent"                                
                            FontSize="14">
                                    <StackPanel>
                                        <materialDesign:PackIcon Kind="ContentCut" Height="30" Width="30"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </StackPanel>


                    </StackPanel>
                </Border>
                <Separator/>
                <Border>
                    
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="0 3 0 0" HorizontalAlignment="Center" FontSize="12" FontWeight="Bold">Diagram Forms</TextBlock>
                        <StackPanel Orientation="Vertical">
                            <!-- Process -->
                            <Border>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock HorizontalAlignment="Center" FontSize="12" FontWeight="Bold">Process</TextBlock>
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal">
                                            <!--- -->
                                            <Button Margin="5 0 5 5" ToolTip="Work Product"
                                        BorderBrush="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurBordure}, ConverterParameter=artefact, UpdateSourceTrigger=PropertyChanged}" 
                                        Background="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurCouleurFond}, ConverterParameter=artefact, UpdateSourceTrigger=PropertyChanged}" 
                                        cal:Message.Attach=
                                        "[Event Click] = [Action SelectTool('artefact')]">
                                                <StackPanel>
                                                    <Image Source="/Resources/Artefact.PNG" Width="30" Height="30" />
                                                </StackPanel>
                                            </Button>
                                            <Button ToolTip="Phase"
                        BorderBrush="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurBordure}, ConverterParameter=phase, UpdateSourceTrigger=PropertyChanged}" 
                        Background="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurCouleurFond}, ConverterParameter=phase, UpdateSourceTrigger=PropertyChanged}" 
                        cal:Message.Attach=
                        "[Event Click] = [Action SelectTool('phase')]">
                                                <StackPanel>
                                                    <Image Source="/Resources/Phase.png" Width="65" Height="50" />
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <Button Margin="5" ToolTip="Role"
                        BorderBrush="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurBordure}, ConverterParameter=role, UpdateSourceTrigger=PropertyChanged}" 
                        Background="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurCouleurFond}, ConverterParameter=role, UpdateSourceTrigger=PropertyChanged}" 
                        cal:Message.Attach=
                        "[Event Click] = [Action SelectTool('role')]">
                                                <StackPanel>
                                                    <Image Source="/Resources/Role.png" Height="30" Width="30"  />
                                                </StackPanel>
                                            </Button>
                                            <Button ToolTip="Annotation"
                        BorderBrush="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurBordure}, ConverterParameter=commentaire, UpdateSourceTrigger=PropertyChanged}" 
                        Background="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurCouleurFond}, ConverterParameter=commentaire, UpdateSourceTrigger=PropertyChanged}" 
                        cal:Message.Attach=
                        "[Event Click] = [Action SelectTool('commentaire')]">
                                                <StackPanel>
                                                    <Image Source="/Resources/Annotation.png" Width="65" Height="50"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Button Margin="5" ToolTip="Activity"
                        BorderBrush="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurBordure}, ConverterParameter=activite, UpdateSourceTrigger=PropertyChanged}" 
                        Background="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurCouleurFond}, ConverterParameter=activite, UpdateSourceTrigger=PropertyChanged}" 
                        cal:Message.Attach=
                        "[Event Click] = [Action SelectTool('activite')]">
                                                <StackPanel>
                                                    <Image Source="/Resources/Activity.PNG"  />
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                        <!-- connexions -->
                                        <StackPanel Orientation="Vertical">
                                            <ComboBox Width="100" Height="25" Margin="5 5 5 1" ToolTip="Process Connexions">
                                                <ComboBoxItem IsSelected="True" Width="70" Height="25" ToolTip="Directionnal Arrow"
                                                          cal:Message.Attach="[Event Selected] = [Action SelectShapeConnexion('directionnalArrow')]" >
                                                    <Image Source="/Resources/DirectionnalArrow.png"  />
                                                </ComboBoxItem>
                                                <ComboBoxItem Width="70" Height="25" ToolTip="Line"
                                                cal:Message.Attach="[Event Selected] = [Action SelectShapeConnexion('lineConnexion')]">
                                                    <Image Source="/Resources/Line.png"/>
                                                </ComboBoxItem>
                                                <ComboBoxItem Width="70" Height="25" ToolTip="Bidirectionnal Arrow"
                                                cal:Message.Attach="[Event Selected] = [Action SelectShapeConnexion('bidirectionnalArrow')]" >
                                                    <Image Source="/Resources/BidirectionnalArrow.png"  />
                                                </ComboBoxItem>
                                            </ComboBox>
                                            <StackPanel Orientation="Horizontal" Margin="6 1 5 1" HorizontalAlignment="Center">
                                                <Button Width="20" Height="24"  ToolTip="Linear Connexion"
                            HorizontalContentAlignment="Center"
                            Background="Transparent"
                            cal:Message.Attach="[Event Click] = [Action ApplyStyleConnexion('1, 0')]"
                            >
                                                    <StackPanel>
                                                        <Rectangle Width="10" Height="5" 
                                                               Fill="Black"
                                                               Stroke="Black"
                                                               />
                                                    </StackPanel>
                                                </Button>
                                                <Button Width="20" Height="24" Margin="0" ToolTip="Squared Connexion"
                                HorizontalContentAlignment="Center"
                                Background="Transparent"
                                cal:Message.Attach="[Event Click] = [Action ApplyStyleConnexion('1, 1')]"
                                >
                                                    <Rectangle Width="10" Height="10" 
                                                         Fill="Black"
                                                               Stroke="Black"
                                                           />
                                                </Button>
                                                <Button  ToolTip="Dashed Connexion"
                            Width="20" Height="24" Margin="0"
                            HorizontalContentAlignment="Center"
                            Background="Transparent"   
                            cal:Message.Attach="[Event Click] = [Action ApplyStyleConnexion('5, 1')]"
                            >
                                                    <Path Stroke="Black" 
                                                      StrokeThickness="4"  Data="M 0,0 L 19,0" StrokeDashArray="2, 1"/>
                                                </Button>
                                                <Button x:Name="ColorConnexion" Width="24" Height="24" Margin="2 0 0 0" ToolTip="Color Connexion"
                            HorizontalContentAlignment="Left"
                            Background="Transparent"                                
                            >
                                                    <StackPanel Width="20" Height="20">
                                                        <Path Data="M4,17L6.75,14.25L6.72,14.23C6.14,13.64 6.14,12.69 6.72,12.11L11.46,7.37L15.7,11.61L10.96,16.35C10.39,16.93 9.46,16.93 8.87,16.37L8.24,17H4M15.91,2.91C16.5,2.33 17.45,2.33 18.03,2.91L20.16,5.03C20.74,5.62 20.74,6.57 20.16,7.16L16.86,10.45L12.62,6.21L15.91,2.91Z" Fill="{Binding Path=SelectedColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                                    </StackPanel>
                                                </Button>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="5 1 5 1" HorizontalAlignment="Center">
                                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                    <TextBox x:Name="ConnexionThickness" Width="49" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsReadOnly="True" ToolTip="Connexion Size"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                    <Button x:Name="UpThickness" Width="24" Height="10" ToolTip="Up">
                                                        <StackPanel>
                                                            <materialDesign:PackIcon Kind="ChevronUp" Height="9" Width="15"/>
                                                        </StackPanel>
                                                    </Button>
                                                    <Button x:Name="DownThickness" Width="24" Height="10">
                                                        <StackPanel>
                                                            <materialDesign:PackIcon Kind="ChevronDown" Height="9" Width="15" ToolTip="Down"/>
                                                        </StackPanel>
                                                    </Button>
                                                </StackPanel>
                                                <StackPanel Orientation="Vertical"  VerticalAlignment="Center">
                                                    <Button x:Name="ApplyThickness" Width="24" Height="20" ToolTip="Apply Connexion Size">
                                                        <StackPanel>
                                                            <materialDesign:PackIcon Kind="Check" Height="20" Width="15"/>
                                                        </StackPanel>
                                                    </Button>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>


                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <!-- Class -->
                            <Separator/>
                            <Border>
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center" FontSize="12" FontWeight="Bold"> UML Class</TextBlock>
                                    <StackPanel Orientation="Vertical" Margin="5">
                                        <Button ToolTip="Class"
                        BorderBrush="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurBordure}, ConverterParameter=classe, UpdateSourceTrigger=PropertyChanged}" 
                        Background="{Binding Path=SelectedTool, Converter={StaticResource ConvertisseurCouleurFond}, ConverterParameter=classe, UpdateSourceTrigger=PropertyChanged}" 
                        cal:Message.Attach=
                        "[Event Click] = [Action SelectTool('classe')]">
                                            <StackPanel>
                                                <Image Source="/Resources/Class.png" Width="65" Height="40" />
                                            </StackPanel>
                                        </Button>
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="3">
                                            <ComboBox Width="100" Height="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" ToolTip="Class Connexions">
                                                <ComboBoxItem
                                                          cal:Message.Attach="[Event Selected] = [Action SelectClassInteraction('bidirectionnalLink')]"  ToolTip="Bidirectionnal Link">
                                                    <Image Source="/Resources/Line.png"  Width="50" Height="25" />
                                                </ComboBoxItem>
                                                <ComboBoxItem IsSelected="True"
                                                          cal:Message.Attach="[Event Selected] = [Action SelectClassInteraction('unidirectionnalLink')]" ToolTip="Unidirectionnal Link">
                                                    <Image Source="/Resources/DirectionnalLink.png" Width="40" Height="25"  />
                                                </ComboBoxItem>
                                                <ComboBoxItem
                                                          cal:Message.Attach="[Event Selected] = [Action SelectClassInteraction('inheritanceLink')]" ToolTip="Inheritance Link">
                                                    <Image Source="/Resources/InheritanceLink.png"  Width="50" Height="25"/>
                                                </ComboBoxItem>
                                                <ComboBoxItem 
                                                          cal:Message.Attach="[Event Selected] = [Action SelectClassInteraction('compositionLink')]" ToolTip="Composition Link">
                                                    <Image Source="/Resources/Composition.png"  Width="50" Height="25"/>
                                                </ComboBoxItem>
                                                <ComboBoxItem 
                                                           cal:Message.Attach="[Event Selected] = [Action SelectClassInteraction('aggregationLink')]" ToolTip="Aggregation Link">
                                                    <Image Source="/Resources/Aggregation.png"  Width="50" Height="25"/>
                                                </ComboBoxItem>
                                            </ComboBox>
                                        </StackPanel>

                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <Separator/>
                            
                            <StackPanel>
                                <TextBlock HorizontalAlignment="Center" FontSize="12" FontWeight="Bold"> Shape style</TextBlock>
                                <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                                    <StackPanel>
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">

                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Button x:Name="ColorBorderShape" Margin="0 0 0 0" ToolTip="Border Color"
                                        HorizontalContentAlignment="Left"
                                        Background="Transparent"                                
                                        >
                                                    <StackPanel>
                                                        <Path 
                                                StrokeThickness="1"
                                                Stroke="{Binding Path=SelectedColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                Width="24" Height="24" Data="M3.88,3C3.38,3.06 3,3.5 3,4V4L3,5H4L5,5V4L5,3H4L3.88,3M7,3V5H9V3H7M11,3V5H13V3H11M15,3V5H17V3H15M19,3V4L19,5H20L21,5V4L21,3.88C20.94,3.38 20.5,3 20,3H19M3,7V9H5V7H3M19,7V9H21V7H19M3,11V13H5V11H3M19.31,12C19.18,12 19.05,12.05 18.95,12.14L17.39,13.71L16.43,12.75L15.72,13.46L16.43,14.17L11.97,18.63V21H14.35L18.8,16.54L19.5,17.25L20.22,16.54L19.26,15.58L20.82,14.03C21,13.83 21,13.5 20.82,13.31L19.65,12.14C19.56,12.05 19.44,12 19.31,12M3,15V17H5V15H3M17,15L17.97,15.97L13.93,20L12.97,19.04L17,15M3,19V20L3,20.12C3.06,20.62 3.5,21 4,21V21H5V20L5,19H4L3,19M7,19V21H9V19H7Z" Fill="Black" />
                                                    </StackPanel>
                                                </Button>
                                                <Button x:Name="Fill" ToolTip="Fill Color"
                                        HorizontalContentAlignment="Left"
                                        Background="Transparent">
                                                    <StackPanel>
                                                        <materialDesign:PackIcon 
                                                Foreground="{Binding Path=SelectedColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                Margin="0 5 0 0" Kind="FormatColorFill" Width="24" Height="24"/>
                                                    </StackPanel>
                                                </Button>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Margin="2" Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Button x:Name="Line" Width="24" Height="24" ToolTip="Lined Border"
                            HorizontalContentAlignment="Center"
                            Background="Transparent"
                            cal:Message.Attach="[Event Click] = [Action ApplyStyleShape('1, 0')]"
                            >
                                                <StackPanel>
                                                    <Rectangle Width="10" Height="5" 
                                                   Fill="Black"
                                                               Stroke="Black"
                                                   StrokeThickness="2" HorizontalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Name="Square" Width="24" Height="24" Margin="0" ToolTip="Squared Border"
                                HorizontalContentAlignment="Center"
                                Background="Transparent"
                                cal:Message.Attach="[Event Click] = [Action ApplyStyleShape('1, 1')]"
                                >
                                                <Rectangle Width="10" Height="10" 
                                               Fill="Black"
                                                               Stroke="Black"
                                               StrokeThickness="2" HorizontalAlignment="Center"/>
                                            </Button>
                                            <Button 
                            Name="Dashed" ToolTip="Dashed Border"
                            Width="24" Height="24" Margin="0"
                            HorizontalContentAlignment="Center"
                            Background="Transparent"   
                            cal:Message.Attach="[Event Click] = [Action ApplyStyleShape('5, 1')]"
                            >
                                                <Path Stroke="Black"
                                          StrokeThickness="4"  Data="M 0,0 L 19,0" StrokeDashArray="2, 1"/>
                                            </Button>
                                        </StackPanel>

                                    </StackPanel>
                                    <xctk:ColorPicker 
                                  ToolTip="Color"
                                  x:Name="colorSelector"                             
                                  VerticalContentAlignment="Stretch"
                                  Background="#00000000"
                                  ShowDropDownButton="False"
                                  ShowRecentColors="True"
                                  BorderBrush="#80000000"
                                  Margin="5" Width="40" Height="40"
                                  SelectedColor="{Binding Path=SelectedColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  AvailableColorsHeader="Palette"
                                  StandardColorsHeader="Base color"
                                  StandardButtonHeader="Standard"
                                  RecentColorsHeader="Recently used"
                                  UsingAlphaChannel="True"
                                  AdvancedButtonHeader="Custom" />
                                </StackPanel>
                                
                            </StackPanel>


                        </StackPanel>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>

        <!-- La barre canvas -->
        <Border Margin="10 2 10 0" DockPanel.Dock="Top" Height="25" BorderThickness="0.75,0.75,0.75,0.75" BorderBrush="#77000000" Width="{Binding Path=CanvasWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left">
            <StackPanel Orientation="Horizontal" Background="#FFF0F0F0">
                <TextBlock x:Name="CanvasName" VerticalAlignment="Center" Width="60" Margin="5 0 0 0" ToolTip="Canvas Name"></TextBlock>
                <TextBlock x:Name="CanvasWidth" VerticalAlignment="Center" ToolTip="Canvas Width"></TextBlock>
                <TextBlock VerticalAlignment="Center">x</TextBlock>
                <TextBlock x:Name="CanvasHeight" VerticalAlignment="Center" ToolTip="Canvas Height"></TextBlock>
                <TextBlock VerticalAlignment="Center" Width="25"> px</TextBlock>
                <TextBlock x:Name="TextBlockPosition" Width="80" VerticalAlignment="Center"/>
                <TextBlock Width="50"></TextBlock>
            </StackPanel>
        </Border>
        <!-- Le canvas de dessin-->
        <ScrollViewer DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Top"
            
            VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <Canvas Margin="10"
                    Width="{Binding Path=CanvasWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              Height="{Binding Path=CanvasHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">

                <Thumb Name="horizontal" 
                   Background="White" 
                   Canvas.Top="{Binding Path=MidCanvasY, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                   Canvas.Left="{Binding Path=CanvasWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      Width="6" Height="6"
                      Cursor="SizeWE"
                   cal:Message.Attach=
                                   "[Event DragDelta] = [Action ChangeControlPoints($horizontalchange, $verticalchange, 'horizontal')]
                                   "/>
                <Thumb Name="diagonal" Background="White" 
                   Canvas.Top="{Binding Path=CanvasHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                   Canvas.Left="{Binding Path=CanvasWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      Width="6" Height="6"
                      Cursor="SizeNWSE"
                   cal:Message.Attach=
                                   "[Event DragDelta] = [Action ChangeControlPoints($horizontalchange, $verticalchange, 'diagonal')]
                                   "/>
                <Thumb Name="vertical" Background="White"
                   Canvas.Top="{Binding Path=CanvasHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                   Canvas.Left="{Binding Path=MidCanvasX, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      Width="6" Height="6"
                      Cursor="SizeNS"
                   cal:Message.Attach=
                                   "[Event DragDelta] = [Action ChangeControlPoints($horizontalchange, $verticalchange, 'vertical')]
                                   "/>


                <ItemsControl x:Name="Items" 
                              Width="{Binding Path=CanvasWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              Height="{Binding Path=CanvasHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              Background="White" cal:Message.Attach=
                              "[Event MouseMove] = [Action MouseMoveCanvas($mousepoint)];
                               [Event PreviewMouseDoubleClick] = [Action SelectTool('deplacement')];
                               [Event MouseLeave] = [Action MouseLeaveCanvas($mousepoint)];
                               [Event MouseRightButtonUp] = [Action RightClickOperation()];
                               [Event MouseLeftButtonDown] = [Action StartLasso()];
                               [Event MouseMove] = [Action MakeLasso($eventArgs)];
                               [Event PreviewMouseLeftButtonUp] = [Action EndLasso()];
                               [Event PreviewMouseLeftButtonUp] = [Action StopConnecting()];
                               [Event PreviewMouseMove] = [Action Angling($eventArgs)];
                               [Event PreviewMouseLeftButtonUp] = [Action StopAngling()];
                               [Event PreviewMouseMove] = [Action Link($eventArgs)];
                              [Event PreviewMouseLeftButtonUp] = [Action EndMove()];
                              [Event PreviewMouseMove] = [Action Move()];
                              [Event PreviewMouseLeftButtonUp] = [Action LeftMouseButtonUp()]
                         "
                              Cursor="Cross">

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas 
                                ClipToBounds="True" Grid.Column="0" Grid.Row="0" x:Name="SurfaceDessin" 
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                >
                                <!-- probablement a enlever -->
                                <Canvas.Background>
                                    <DrawingBrush TileMode="Tile" Viewport="0,0,20,20" 
                                     ViewportUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <GeometryDrawing>
                                                <GeometryDrawing.Geometry>
                                                    <RectangleGeometry Rect="0,0,20,20"/>
                                                </GeometryDrawing.Geometry>
                                                <GeometryDrawing.Pen>
                                                    <Pen Brush="LightGray" Thickness="1"/>
                                                </GeometryDrawing.Pen>
                                            </GeometryDrawing>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Canvas.Background>
                                <!-- -->
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding Left, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Top, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <Setter Property="Panel.ZIndex" Value="{Binding ZIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Canvas
                                Tag="{Binding Path=Id, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Width="{Binding Path=ItemWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Height="{Binding Path=ItemHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Background="Transparent"
                                    cal:Message.Attach=
                                   "[Event PreviewMouseLeftButtonDown] = [Action Select($dataContext)];
                               [Event MouseLeftButtonDown] = [Action StartMove($dataContext)]
                               "
                                   >
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="myTransform"
                                        CenterX="{Binding ItemCenterX, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                        CenterY="{Binding ItemCenterY, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        Angle="{Binding RotationAngle, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        />
                                </Canvas.RenderTransform>
                                <TextBox 
                                         AcceptsReturn="True"
                                         TextWrapping="Wrap"
                                         Canvas.Left="{Binding Path=LeftText1, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Canvas.Top="{Binding Path=TopText1, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Text="{Binding Path=Text1, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Width="{Binding Path=TextWidth1, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Height="{Binding Path=Text1Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Visibility="{Binding Path=Visibility1, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsEnabled="{Binding Path=IsTextEnabled, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsHitTestVisible="{Binding Path=IsTextHittable , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         TextAlignment="Center"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         Panel.ZIndex="4"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         cal:Message.Attach=
                                         "[Event PreviewMouseDown] = [Action Select($dataContext)]
                                         "
                                         />
                                <TextBox AcceptsReturn="True"
                                         TextWrapping="Wrap"
                                         Canvas.Left="{Binding Path=LeftText2, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Canvas.Top="{Binding Path=TopText2, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Text="{Binding Path=Text2, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Width="{Binding Path=TextWidthBoth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Height="{Binding Path=Text2Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Visibility="{Binding Path=Visibility2, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsEnabled="{Binding Path=IsTextEnabled, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsHitTestVisible="{Binding Path=IsTextHittable , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         TextAlignment="Left"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         Panel.ZIndex="4"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         cal:Message.Attach=
                                         "[Event PreviewMouseDown] = [Action Select($dataContext)]
                                         "
                                         />
                                <TextBox AcceptsReturn="True"
                                         TextWrapping="Wrap"
                                         Canvas.Left="{Binding Path=LeftText3, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Canvas.Top="{Binding Path=TopText3, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Text="{Binding Path=Text3, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Width="{Binding Path=TextWidthBoth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Height="{Binding Path=Text3Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         Visibility="{Binding Path=Visibility3, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsEnabled="{Binding Path=IsTextEnabled, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         IsHitTestVisible="{Binding Path=IsTextHittable , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         TextAlignment="Left"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         Panel.ZIndex="4"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         cal:Message.Attach=
                                         "[Event PreviewMouseDown] = [Action Select($dataContext)]
                                         "
                                         />
                                <Ellipse
                                    Width="10"
                                    Height="10"
                                    Cursor="Hand"
                                    Fill="{Binding FillLineConnector, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Left="{Binding LineConnectorLeft , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Top="{Binding LineConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    IsHitTestVisible="{Binding IsLineConnectorHittable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Panel.ZIndex="7"
                                    cal:Message.Attach=
                                   "[Event PreviewMouseLeftButtonDown] = [Action StartAngle($dataContext)]
                                    "
                                    />
                                <Path
                                    Name="Shape"
                                    Canvas.Left="0"
                                    Canvas.Top="0"
                                    Data="{Binding Geometry, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    Fill="{Binding Fill, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Stroke="{Binding Stroke, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    StrokeDashArray="{Binding StrokeDashArray, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Panel.ZIndex="0"
                                    
                                    />
                                <Ellipse
                                    
                                    Width="10"
                                    Height="10"
                                    Stroke="{Binding MovingStrokeColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Fill="{Binding FillConnector , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Left="{Binding LeftConnectorLeft, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Top="{Binding LeftConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Panel.ZIndex="7"
                                    Cursor="Hand"
                                    IsHitTestVisible="{Binding IsConnectorHittable , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    cal:Message.Attach=
                                   "[Event MouseLeftButtonDown] = [Action StartConnexion($dataContext, 'left')];
                                    [Event MouseMove] = [Action MovingInConnector($dataContext, 'left')];
                                    [Event MouseLeave] = [Action LeaveConnector()]
                                   "
                                 />
                                <Ellipse
                                    Width="10"
                                    Height="10"
                                    Stroke="{Binding MovingStrokeColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Fill="{Binding FillConnector , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Left="{Binding TopConnectorLeft , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Top="{Binding TopConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    Panel.ZIndex="7"
                                    Cursor="Hand"
                                    IsHitTestVisible="{Binding IsConnectorHittable , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    cal:Message.Attach=
                                   "[Event MouseLeftButtonDown] = [Action StartConnexion($dataContext, 'top')];
                                    [Event MouseMove] = [Action MovingInConnector($dataContext, 'top')];
                                    [Event MouseLeave] = [Action LeaveConnector()]
                                   "
                                    />
                                <Ellipse
                                    Width="10"
                                    Height="10"
                                    Stroke="{Binding MovingStrokeColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Fill="{Binding FillConnector , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Left="{Binding RightConnectorLeft , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Top="{Binding RightConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    IsHitTestVisible="{Binding IsConnectorHittable , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Panel.ZIndex="7"
                                    Cursor="Hand"
                                    cal:Message.Attach=
                                   "[Event MouseLeftButtonDown] = [Action StartConnexion($dataContext, 'right')];
                                    [Event MouseMove] = [Action MovingInConnector($dataContext, 'right')];
                                    [Event MouseLeave] = [Action LeaveConnector()]
                                    "
                                 />
                                <Ellipse
                                    Width="10"
                                    Height="10"
                                    Stroke="{Binding MovingStrokeColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Fill="{Binding FillConnector , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Left="{Binding BottomConnectorLeft , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Canvas.Top="{Binding BottomConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                    IsHitTestVisible="{Binding IsConnectorHittable , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Cursor="Hand"
                                    Panel.ZIndex="7"
                                    AllowDrop="True"
                                    cal:Message.Attach=
                                   "[Event MouseLeftButtonDown] = [Action StartConnexion($dataContext, 'bottom')];
                                    [Event MouseMove] = [Action MovingInConnector($dataContext, 'bottom')];
                                    [Event MouseLeave] = [Action LeaveConnector()]
                                   "
                                 />
                                <Thumb Background="Black"  Width="10" Height="10"
                                       Cursor="SizeWE" Panel.ZIndex="10"
                                       Visibility="{Binding ResizeVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Left="0"
                                       Canvas.Top="{Binding LeftConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  
                                       cal:Message.Attach=
                                   "[Event DragDelta] = [Action Resize($horizontalchange, $verticalchange, 'left')]
                                   "
                                />
                                <Thumb Background="Black"  Width="10" Height="10"
                                       Cursor="SizeNWSE" Panel.ZIndex="10"
                                       Visibility="{Binding ResizeVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Left="0"
                                       Canvas.Top="0"
                                       cal:Message.Attach=
                                   "[Event DragDelta] = [Action Resize($horizontalchange, $verticalchange, 'top-left')]
                                   "
                                />
                                <Thumb Background="Black"  Width="10" Height="10"
                                       Cursor="SizeNS" Panel.ZIndex="10"
                                       Visibility="{Binding ResizeVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Left="{Binding TopConnectorLeft , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Top="0" 
                                       cal:Message.Attach=
                                   "[Event DragDelta] = [Action Resize($horizontalchange, $verticalchange, 'top')]
                                   "
                                />
                                <Thumb Background="Black"  Width="10" Height="10"
                                       Cursor="SizeNESW" Panel.ZIndex="10"
                                       Visibility="{Binding ResizeVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Left="{Binding ItemWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Top="0"
                                       cal:Message.Attach=
                                   "[Event DragDelta] = [Action Resize($horizontalchange, $verticalchange, 'top-right')]
                                   "
                                />
                                <Thumb Background="Black"  Width="10" Height="10"
                                       Cursor="SizeWE" Panel.ZIndex="10"
                                       Visibility="{Binding ResizeVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Left="{Binding ItemWidth , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Top="{Binding RightConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                       cal:Message.Attach=
                                   "[Event DragDelta] = [Action Resize($horizontalchange, $verticalchange, 'right')]
                                   "
                                />
                                <Thumb Background="Black"  Width="10" Height="10"
                                       Cursor="SizeNWSE" Panel.ZIndex="10"
                                       Visibility="{Binding ResizeVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Left="{Binding ItemWidth , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Top="{Binding BottomConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                       cal:Message.Attach=
                                   "[Event DragDelta] = [Action Resize($horizontalchange, $verticalchange, 'bottom-right')]
                                   "
                                />
                                <Thumb Background="Black"  Width="10" Height="10"
                                       Cursor="SizeNS" Panel.ZIndex="10"
                                       Visibility="{Binding ResizeVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Left="{Binding BottomConnectorLeft , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Top="{Binding BottomConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                       cal:Message.Attach=
                                   "[Event DragDelta] = [Action Resize($horizontalchange, $verticalchange, 'bottom')]
                                   "
                                />
                                <Thumb Background="Black"  Width="10" Height="10"
                                       Cursor="SizeNESW" Panel.ZIndex="10"
                                       Visibility="{Binding ResizeVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       Canvas.Left="0"
                                       Canvas.Top="{Binding BottomConnectorTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                cal:Message.Attach=
                                   "[Event DragDelta] = [Action Resize($horizontalchange, $verticalchange, 'bottom-left')]
                                   "
                                       />
                                <Rectangle
                                    Width="{Binding SelectionWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Height="{Binding SelectionHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    IsHitTestVisible="True"
                                    Fill="Transparent"
                                    Stroke="Black"  
                                    StrokeThickness="2"
                                    StrokeDashArray="2, 2"
                                    Panel.ZIndex="9"
                                    />
                                <Image Source="{Binding ByteImageData, TargetNullValue={x:Null}}" 
                                       Width="{Binding Path=ItemWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    Height="{Binding Path=ItemHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </Canvas>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </Canvas>
        </ScrollViewer>
        <!-- temporaire pour Count -->
    </DockPanel>
</UserControl>
